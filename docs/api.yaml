openapi: 3.1.0
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
info:
  title: check-the-vibes API
  version: 0.1.0
  description: >-
    Read-only API that summarizes teamwork and SWE/VCS best practices for a GitHub
    repository within a specified time window. Returns a single JSON report suitable
    for rendering a TA dashboard.


    The API analyzes pull requests, issues, contributors, project boards, and repository
    hygiene to provide actionable insights for software engineering education.
  contact:
    name: 17-313 Teaching Team
    url: https://github.com/ChrisTimperley/check-the-vibes
  license:
    name: GPL-3.0
    url: https://www.gnu.org/licenses/gpl-3.0.html
servers:
  - url: https://api.check-the-vibes.dev
    description: Production (placeholder)
  - url: http://localhost:8000
    description: Local development

tags:
  - name: Repository Analysis
    description: Operations for analyzing GitHub repositories and generating educational metrics

security: [] # Add bearerAuth if you require auth for this endpoint

paths:
  /analyze:
    get:
      operationId: analyzeRepo
      summary: Analyze repository teamwork and best practices
      description: >-
        Computes comprehensive metrics for Contributors, Pull Requests, Project Board, Issues,
        and Best Practices & Hygiene within a specified time window. All results are time-bounded
        and suitable for educational assessment and feedback.


        **Rate Limiting**: This endpoint may take several seconds to complete for large
        repositories due to GitHub API rate limits. Results are cached for 10 minutes.
      tags: [Repository Analysis]
      parameters:
        - in: query
          name: repo
          required: true
          description: GitHub repository in `owner/repo` form (case-sensitive)
          schema:
            type: string
            pattern: '^[^/]+/[^/]+$'
            example: 'microsoft/vscode'
        - in: query
          name: from
          required: true
          description: Window start (inclusive, UTC ISO 8601)
          schema:
            type: string
            format: date-time
            example: '2025-09-01T00:00:00Z'
        - in: query
          name: to
          required: true
          description: Window end (inclusive, UTC ISO 8601)
          schema:
            type: string
            format: date-time
            example: '2025-09-15T23:59:59Z'
        - in: query
          name: tz
          required: false
          description: IANA time zone for display purposes
          schema:
            type: string
            example: America/New_York
      responses:
        '200':
          description: Analysis completed
          headers:
            X-RateLimit-Limit:
              description: The number of allowed requests in the current period
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: The number of remaining requests in the current period
              schema:
                type: integer
            X-RateLimit-Reset:
              description: The time at which the current rate limit window resets in UTC epoch seconds
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeResponse'
              examples:
                minimal:
                  summary: Minimal example
                  value:
                    repo: cmu-se/check-the-vibes-sample
                    window:
                      {
                        from: '2025-09-01T00:00:00Z',
                        to: '2025-09-15T23:59:59Z',
                      }
                    summary:
                      contributors_active: 4
                      prs_opened: 8
                      issues_opened: 6
                      issues_closed: 5
                      pct_prs_reviewed: 0.75
                      pct_prs_linked_to_issues: 0.62
                      median_pr_cycle_time_hours: 30.5
                      stale_items: 2
                    contributors:
                      - login: alice
                        commits: 10
                        prs: 3
                        reviews: 4
                        issues: 1
                        lines_added: 520
                        lines_deleted: 210
                        direct_pushes_default: 0
                    pull_requests:
                      - number: 12
                        title: 'feat: add auth flow'
                        author: alice
                        created_at: '2025-09-02T14:00:00Z'
                        updated_at: '2025-09-03T09:00:00Z'
                        merged_at: '2025-09-03T10:00:00Z'
                        status: Merged
                        is_draft: false
                        is_wip: false
                        reviewed: true
                        linked_issues: [34]
                        files_changed: 6
                        additions: 180
                        deletions: 40
                        size_bucket: M
                        time_to_first_review_minutes: 90
                        cycle_time_hours: 20
                        approvals: 2
                        reviewers: [bob, carol]
                        ci_status: pass
                        url: 'https://github.com/.../pull/12'
                    project: { items: [] }
                    issues:
                      - number: 34
                        title: Login error on Safari
                        author: dave
                        created_at: '2025-09-02T12:00:00Z'
                        closed_at: '2025-09-04T08:00:00Z'
                        is_closed: true
                        time_to_first_response_minutes: 45
                        time_to_close_hours: 44
                        assignees: [alice]
                        labels: [bug]
                        linked_prs: [12]
                        url: 'https://github.com/.../issues/34'
                    hygiene:
                      branch_protection:
                        present: true
                        required_reviews: 1
                        status_checks_required: true
                        enforce_admins: true
                        allow_force_pushes: false
                      codeowners: true
                      ci_present: true
                      issue_templates: true
                      pr_template: true
                      contributing: true
                      code_of_conduct: true
                      security: false
                      license: true
                      readme_quality:
                        has_setup: true
                        has_test: true
                        badges: [build, coverage]
                      precommit: true
                      editorconfig: true
                      releases_recent: false
                      conventional_commits_rate: 0.6
                      dependabot: true
                    scores:
                      {
                        overall: 78,
                        prs: 82,
                        contributors: 70,
                        project: 65,
                        issues: 75,
                        hygiene: 90,
                      }
        '400':
          description: Bad request (validation error)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: 400
                message: 'Invalid repository format'
                details:
                  field: 'repo'
                  expected: 'owner/repo format'
                  received: 'invalid-repo-name'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Repository not found or inaccessible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limited (GitHub or service)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # Primitive aliases
    Login:
      type: string
      pattern: '^[A-Za-z0-9-]{1,39}$'
    URL:
      type: string
      format: uri
    Label:
      type: string
      minLength: 1
      maxLength: 100
    SizeBucket:
      type: string
      enum: [XS, S, M, L, XL]
    PRStatus:
      type: string
      enum: [Open, Closed, Merged, Draft, WIP]
    CIStatus:
      type: string
      enum: [pass, fail, mixed, none]

    AnalyzeResponse:
      type: object
      description: Complete analysis report for a GitHub repository within a time window
      additionalProperties: false
      properties:
        repo:
          type: string
          pattern: '^[^/]+/[^/]+$'
        window:
          type: object
          additionalProperties: false
          properties:
            from: { type: string, format: date-time }
            to: { type: string, format: date-time }
          required: [from, to]
        summary:
          type: object
          additionalProperties: false
          properties:
            contributors_active: { type: integer, minimum: 0 }
            prs_opened: { type: integer, minimum: 0 }
            issues_opened: { type: integer, minimum: 0 }
            issues_closed: { type: integer, minimum: 0 }
            pct_prs_reviewed: { type: number, minimum: 0, maximum: 1 }
            pct_prs_linked_to_issues: { type: number, minimum: 0, maximum: 1 }
            median_pr_cycle_time_hours: { type: number, minimum: 0 }
            stale_items: { type: integer, minimum: 0 }
          required:
            [
              contributors_active,
              prs_opened,
              issues_opened,
              issues_closed,
              pct_prs_reviewed,
              median_pr_cycle_time_hours,
              stale_items,
            ]
        contributors:
          type: array
          items: { $ref: '#/components/schemas/Contributor' }
          default: []
        pull_requests:
          type: array
          items: { $ref: '#/components/schemas/PullRequest' }
          default: []
        project:
          type: object
          additionalProperties: false
          properties:
            items:
              type: array
              items: { $ref: '#/components/schemas/ProjectItem' }
              default: []
          required: [items]
        issues:
          type: array
          items: { $ref: '#/components/schemas/Issue' }
          default: []
        hygiene:
          $ref: '#/components/schemas/Hygiene'
        scores:
          $ref: '#/components/schemas/Scores'
      required:
        [
          repo,
          window,
          summary,
          contributors,
          pull_requests,
          project,
          issues,
          hygiene,
        ]

    Contributor:
      type: object
      additionalProperties: false
      properties:
        login: { $ref: '#/components/schemas/Login' }
        commits: { type: integer, minimum: 0 }
        prs: { type: integer, minimum: 0 }
        reviews: { type: integer, minimum: 0 }
        issues: { type: integer, minimum: 0 }
        lines_added: { type: integer, minimum: 0 }
        lines_deleted: { type: integer, minimum: 0 }
        direct_pushes_default: { type: integer, minimum: 0 }
      required: [login, commits, prs, reviews, issues, direct_pushes_default]

    PullRequest:
      type: object
      additionalProperties: false
      properties:
        number: { type: integer, minimum: 1 }
        title: { type: string }
        author: { $ref: '#/components/schemas/Login' }
        created_at: { type: string, format: date-time }
        updated_at: { type: string, format: date-time }
        closed_at: { type: string, format: date-time }
        merged_at: { type: string, format: date-time }
        status: { $ref: '#/components/schemas/PRStatus' }
        is_draft: { type: boolean }
        is_wip: { type: boolean }
        reviewed: { type: boolean }
        linked_issues:
          type: array
          items: { type: integer, minimum: 1 }
          default: []
        files_changed: { type: integer, minimum: 0 }
        additions: { type: integer, minimum: 0 }
        deletions: { type: integer, minimum: 0 }
        size_bucket: { $ref: '#/components/schemas/SizeBucket' }
        time_to_first_review_minutes: { type: number, minimum: 0 }
        cycle_time_hours: { type: number, minimum: 0 }
        approvals: { type: integer, minimum: 0 }
        reviewers:
          type: array
          items: { $ref: '#/components/schemas/Login' }
          default: []
        ci_status: { $ref: '#/components/schemas/CIStatus' }
        url: { $ref: '#/components/schemas/URL' }
      required:
        [
          number,
          title,
          author,
          created_at,
          status,
          reviewed,
          files_changed,
          additions,
          deletions,
          size_bucket,
          url,
        ]

    Issue:
      type: object
      additionalProperties: false
      properties:
        number: { type: integer, minimum: 1 }
        title: { type: string }
        author: { $ref: '#/components/schemas/Login' }
        created_at: { type: string, format: date-time }
        closed_at: { type: string, format: date-time }
        is_closed: { type: boolean }
        time_to_first_response_minutes: { type: number, minimum: 0 }
        time_to_close_hours: { type: number, minimum: 0 }
        assignees:
          type: array
          items: { $ref: '#/components/schemas/Login' }
          default: []
        labels:
          type: array
          items: { $ref: '#/components/schemas/Label' }
          default: []
        linked_prs:
          type: array
          items: { type: integer, minimum: 1 }
          default: []
        url: { $ref: '#/components/schemas/URL' }
      required:
        [
          number,
          title,
          author,
          created_at,
          is_closed,
          assignees,
          labels,
          linked_prs,
          url,
        ]

    ProjectItem:
      type: object
      additionalProperties: false
      properties:
        title: { type: string }
        type: { type: string, enum: [Issue, PR, Draft] }
        column: { type: string, description: 'Projects v2 status/column name' }
        last_activity: { type: string, format: date-time }
        assignees:
          type: array
          items: { $ref: '#/components/schemas/Login' }
          default: []
        labels:
          type: array
          items: { $ref: '#/components/schemas/Label' }
          default: []
        linked_artifact: { $ref: '#/components/schemas/URL' }
        age_days: { type: number, minimum: 0 }
      required: [title, type, column, last_activity, assignees, labels]

    Hygiene:
      type: object
      additionalProperties: false
      properties:
        branch_protection:
          type: object
          additionalProperties: false
          properties:
            present: { type: boolean }
            required_reviews: { type: integer, minimum: 0 }
            status_checks_required: { type: boolean }
            enforce_admins: { type: boolean }
            allow_force_pushes: { type: boolean }
          required: [present]
        codeowners: { type: boolean }
        ci_present: { type: boolean }
        issue_templates: { type: boolean }
        pr_template: { type: boolean }
        contributing: { type: boolean }
        code_of_conduct: { type: boolean }
        security: { type: boolean }
        license: { type: boolean }
        readme_quality:
          type: object
          additionalProperties: false
          properties:
            has_setup: { type: boolean }
            has_test: { type: boolean }
            badges:
              type: array
              items: { type: string }
              default: []
          required: [has_setup, has_test]
        precommit: { type: boolean }
        editorconfig: { type: boolean }
        releases_recent: { type: boolean }
        conventional_commits_rate: { type: number, minimum: 0, maximum: 1 }
        dependabot: { type: boolean }
      required: [branch_protection, codeowners, ci_present, license]

    Scores:
      type: object
      additionalProperties: false
      properties:
        overall: { type: integer, minimum: 0, maximum: 100 }
        contributors: { type: integer, minimum: 0, maximum: 100 }
        prs: { type: integer, minimum: 0, maximum: 100 }
        project: { type: integer, minimum: 0, maximum: 100 }
        issues: { type: integer, minimum: 0, maximum: 100 }
        hygiene: { type: integer, minimum: 0, maximum: 100 }
      required: [overall]

    Error:
      type: object
      additionalProperties: false
      properties:
        code: { type: integer }
        message: { type: string }
        details: { type: object }
      required: [code, message]
